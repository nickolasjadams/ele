"use strict";function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){var n;if(o)return"string"==typeof o?_arrayLikeToArray(o,minLen):"Map"===(n="Object"===(n=Object.prototype.toString.call(o).slice(8,-1))&&o.constructor?o.constructor.name:n)||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,_toPropertyKey(descriptor.key),descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _toPropertyKey(arg){arg=_toPrimitive(arg,"string");return"symbol"===_typeof(arg)?arg:String(arg)}function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0===prim)return("string"===hint?String:Number)(input);prim=prim.call(input,hint||"default");if("object"!==_typeof(prim))return prim;throw new TypeError("@@toPrimitive must return a primitive value.")}
/**
 * Ele.js
 * 
 * A simple Element Builder to replace the horrendous 
 * native DOM API methods for creating new Elements.
 * 
 * @author Nick Adams
 * @see {@link https://github.com/nickolasjadams/ele|Repository}
 * @license MIT
 * @version 1.0.8
 */"undefined"!=typeof document&&(_ele_document=document),"undefined"!=typeof window&&(_ele_window=window);var _ele_document,_ele_window,Ele=function(){function Ele(options){_classCallCheck(this,Ele),options&&(this.element=this.mint(options)),this.options=options}return _createClass(Ele,[{key:"setDocument",value:function(object){this.document=object}},{key:"setWindow",value:function(object){this.window=object}},{key:"mint",value:function(options){if(!this.options&&!options)throw new Error("options are required.");if("undefined"==options.element)throw new Error("options.element: string is required.");void 0!==_ele_document?document=_ele_document:(document=this.document,this.window);var document,element=document.createElement(options.element);if(options.class&&(/\s/g.test(options.class)||Array.isArray(options.class)?(Array.isArray(options.class)||(options.class=options.class.trim(),options.class=options.class.split(/\s/g)),options.class.forEach(function(s){return element.classList.add(s)})):element.classList.add(options.class),delete options.class),options.id){if(options.id.length<1)throw new Error("options.id: String length must be greater than 0.");if(/\s/g.test(options.id)||Array.isArray(options.id))throw new Error("options.id: Elements may only have one id. Space is an illegal character in ids.");if(/^[0-9]/.test(options.id))throw new Error("options.id: Don't begin an id with a digit.");element.id=options.id,delete options.id}if(options.html&&options.text)throw new Error("Element can't contain options.html and options.text");if(options.html&&(element.innerHTML=options.html,delete options.html),options.text&&(element.innerText=options.text,delete options.text),options.event&&(Array.isArray(options.event)?options.event.forEach(function(e){return element.addEventListener(e.type,e.listener)}):(document=options.event,element.addEventListener(document.type,document.listener)),delete options.event),options.children){if(!Array.isArray(options.children))throw new Error("options.children must be an Array.");options.children.forEach(function(child){return element.appendChild(child)}),delete options.children}delete options.element;for(var _i=0,_Object$entries=Object.entries(options);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],_Object$entries$_i=_Object$entries$_i[1],oldKey=key;/[A-Z]/.test(key)&&(key=(key=key.replaceAll(/([A-Z])/g,"-$1")).toLowerCase()),element.setAttribute(key,_Object$entries$_i),delete options[oldKey]}return element}}],[{key:"mint",value:function(options){return new Ele(options).element}}]),Ele}();"object"===("undefined"==typeof module?"undefined":_typeof(module))&&(module.exports=Ele);